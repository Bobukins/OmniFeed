services:
  nginx:
    container_name: nginx_container
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certs:/etc/nginx/certs
    depends_on:
      - client_server1
      - social_content_gate1
    networks:
      - app-network
  postgres:
    container_name: postgres_container
    image: postgres:17
    build: ./postgres
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: "OmniFeedDB"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "password"
      PGDATA: "/var/lib/postgresql/data/pgdata"
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=ru_RU.UTF-8"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d OmniFeedDB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - app-network
  
  client_server1:
    container_name: ClientServer1
    build: ./ClientServer
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1201/healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      - MODULE_NAME=main
      - VARIABLE_NAME=app
    networks:
      - app-network

  social_content_gate1:
    container_name: SocialContentGate1
    build: ./SocialContentGate
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1204/healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      - MODULE_NAME=main
      - VARIABLE_NAME=app
    networks:
      - app-network

networks:
  app-network:
    driver: bridge